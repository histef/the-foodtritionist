{"version":3,"sources":["components/Sidebar.js","components/ComparePage.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","_ref","item1","item2","react_default","a","createElement","className","name","Link","to","reactstrap_es","Compare","_this$props","this","props","cal1","cal2","vitE1","vitE2","fat1","fat2","sugar1","sugar2","style","display","alignItems","body","id","Component","App","state","search","searchListItems","item1Card","item2Card","openSideBar","compareBtnClicked","onSearch","e","_this","setState","target","value","onSearchSubmit","preventDefault","fetch","concat","then","resp","json","data","console","log","list","item","catch","error","onPagination","checkValues","nutrient","onChooseItem","_this$state","itemId","filter","getAttribute","ndbno","report","foods","nutrients","_this2","_this$state2","Route","exact","path","render","inline","for","onChange","type","placeholder","onClick","length","map","key","src_components_Sidebar","ComparePage","Boolean","window","location","hostname","match","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yUAuBeA,SAlBC,SAAAC,GAAqB,IAAlBC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,MACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAIJ,EAAMM,OAEZJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,SAAIH,EAAMK,OAETJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,gBACPN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEJ,UAAU,eADZ,eCsBKK,0LA/BL,IAAAC,EAEyEC,KAAKC,MAA5Eb,EAFFW,EAEEX,MAAOc,EAFTH,EAESG,KAAMC,EAFfJ,EAEeI,KAAMC,EAFrBL,EAEqBK,MAAOC,EAF5BN,EAE4BM,MAAOhB,EAFnCU,EAEmCV,MAAOiB,EAF1CP,EAE0CO,KAAMC,EAFhDR,EAEgDQ,KAAMC,EAFtDT,EAEsDS,OAAQC,EAF9DV,EAE8DU,OAEpE,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMkB,MAAO,CAACC,QAAS,OAAQC,WAAY,WACzCtB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMgB,MAAI,EAACpB,UAAU,uBACnBH,EAAAC,EAAAC,cAACK,EAAA,EAAD,KAAYT,EAAMM,MAClBJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,kBAAqBK,GACrBZ,EAAAC,EAAAC,cAACK,EAAA,EAAD,aAAgBS,EAAhB,SACAhB,EAAAC,EAAAC,cAACK,EAAA,EAAD,mBAAsBO,GACtBd,EAAAC,EAAAC,cAACK,EAAA,EAAD,eAAkBW,EAAlB,MAEFlB,EAAAC,EAAAC,cAAA,MAAIsB,GAAG,UAAP,MACAxB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMgB,MAAI,EAACpB,UAAU,uBACrBH,EAAAC,EAAAC,cAACK,EAAA,EAAD,KAAYR,EAAMK,MAChBJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,kBAAqBM,GACrBb,EAAAC,EAAAC,cAACK,EAAA,EAAD,aAAgBU,EAAhB,SACAjB,EAAAC,EAAAC,cAACK,EAAA,EAAD,mBAAsBQ,GACtBf,EAAAC,EAAAC,cAACK,EAAA,EAAD,eAAkBY,EAAlB,OAGJnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,KACPN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,uCAzBYsB,cC8JPC,0NAzJbC,MAAQ,CACNC,OAAQ,GACRC,gBAAiB,GACjB/B,MAAO,GACPC,MAAO,GACPa,KAAM,GACNE,MAAO,GACPE,KAAM,GACNE,OAAQ,GACRY,WAAW,EACXC,WAAW,EACXlB,KAAM,GACNE,MAAO,GACPE,KAAM,GACNE,OAAQ,GACRa,aAAa,EACbC,mBAAmB,KAGrBC,SAAW,SAAAC,GACTC,EAAKC,SAAS,CACZT,OAAQO,EAAEG,OAAOC,WAIrBC,eAAiB,SAAAL,GACfA,EAAEM,iBAGGL,EAAKT,MAAMC,OAKhBc,MAAK,sDAAAC,OAAuDP,EAAKT,MAAMC,OAAlE,6EACFgB,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZX,EAAKC,SAAS,CACZR,gBAAiBkB,EAAKG,KAAKC,SAG9BC,MAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,KAX5BL,QAAQC,IAAI,wBAehBK,aAAe,eAOfC,YAAc,SAACC,GACb,MAAgB,OAAbA,EACM,EAEAA,KAKXC,aAAe,SAACtB,GAAM,IAAAuB,EACmBtB,EAAKT,MAApCG,EADY4B,EACZ5B,UAEF6B,EAHcD,EACD7B,gBACU+B,OAAO,SAAAT,GAAI,OAAIhB,EAAEG,OAAOuB,aAAa,UAAYV,EAAK/C,OAC/D,GAAG0D,MAGnBhC,EACFY,MAAK,kMAAAC,OAAmMgB,IACvMf,KAAK,SAAAC,GAAI,OAAEA,EAAKC,SAChBF,KAAK,SAAAC,GACJT,EAAKC,SAAS,CACZtC,MAAO8C,EAAKkB,OAAOC,MAAM,GACzBnD,KAAMgC,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MACxCxB,MAAO8B,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MACzCtB,KAAM4B,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MACxCpB,OAAQ0B,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MAC1CR,WAAW,MAIfW,MAAK,kMAAAC,OAAmMgB,IACvMf,KAAK,SAAAC,GAAI,OAAEA,EAAKC,SAChBF,KAAK,SAAAC,GACJG,QAAQC,IAAIJ,GACZT,EAAKC,SAAS,CACZvC,MAAO+C,EAAKkB,OAAOC,MAAM,GACzBpD,KAAMiC,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MACxCzB,MAAO+B,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MACzCvB,KAAM6B,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MACxCrB,OAAQ2B,EAAKkB,OAAOC,MAAM,GAAGC,UAAU,GAAG1B,MAC1CT,WAAW,EACXE,aAAa,+EAMZ,IAAAkC,EAAAxD,KAAAyD,EAEmCzD,KAAKiB,MAAvCE,EAFDsC,EAECtC,gBAAiB/B,EAFlBqE,EAEkBrE,MAAOC,EAFzBoE,EAEyBpE,MAEhC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5BvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMiE,QAAM,EAACrE,UAAU,eACrBH,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOkE,IAAI,UACTzE,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOiB,GAAG,SAASrB,UAAU,cAAcuE,SAAU,SAAAvC,GAAC,OAAE+B,EAAKhC,SAASC,IAAIwC,KAAK,SAASC,YAAY,oBACpG5E,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOJ,UAAU,aAAawE,KAAK,SAASpC,MAAM,SAASsC,QAAS,SAAA1C,GAAC,OAAE+B,EAAK1B,eAAeL,SAIjGnC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEJ,UAAU,aACV0E,QAAS,SAAA1C,GAAC,OAAE+B,EAAKT,aAAatB,KAE9BN,EAAgBiD,OAAS,EACvBjD,EAAgBkD,IAAI,SAAA5B,GAAI,OACxBnD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEJ,UAAU,kBACV6E,IAAK7B,EAAKW,MACV1D,KAAM+C,EAAK/C,MACX+C,EAAK/C,QAGP,IAGF8D,EAAKvC,MAAMK,YACThC,EAAAC,EAAAC,cAAC+E,EAAD,CACEnF,MAAOA,EACPC,MAAOA,IAET,OAIRC,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOE,KAAK,eAAeC,OAAQ,kBACjCvE,EAAAC,EAAAC,cAACgF,EACGhB,EAAKvC,kBAnJDF,cCIE0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASjB,OACPvE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACwF,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,KAAK,SAAAoD,GACjCA,EAAaC","file":"static/js/main.dcbd520b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap'\nimport './Sidebar.css';\n\nconst Sidebar = ({ item1, item2}) => {\n  return (\n    <div className='side-bar'>\n      <div className='comp-list-item'>\n        <p>{item1.name}</p>\n      </div>\n      <div className='comp-list-item'>\n       <p>{item2.name}</p>\n      </div>\n        <Link to='/comparepage'>\n          <Button\n            className='compare-btn'\n          >Compare</Button>\n        </Link>\n    </div>\n  )\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardTitle, CardText } from 'reactstrap';\nimport './Compare.css';\n\nclass Compare extends Component {\n  render(){\n\n    const { item1, cal1, cal2, vitE1, vitE2, item2, fat1, fat2, sugar1, sugar2 } = this.props;\n\n    return (\n      <div className='body'>\n        <main style={{display: 'flex', alignItems: 'center'}}>\n          <Card body className=\"text-center display\">\n            <CardTitle>{item1.name}</CardTitle>\n            <CardText>calories: {cal1}</CardText>\n            <CardText>fat: {fat1}grams</CardText>\n            <CardText>vitamin E: {vitE1}</CardText>\n            <CardText>sugar: {sugar1}g</CardText>\n          </Card>\n          <h1 id='versus'>vs</h1>\n          <Card body className=\"text-center display\">\n          <CardTitle>{item2.name}</CardTitle>\n            <CardText>calories: {cal2}</CardText>\n            <CardText>fat: {fat2}grams</CardText>\n            <CardText>vitamin E: {vitE2}</CardText>\n            <CardText>sugar: {sugar2}g</CardText>\n          </Card>\n        </main>\n        <Link to='/'>\n          <p className='link'>compare two other items...</p>\n        </Link>\n        </div>\n    )\n  }\n}\n\nexport default Compare;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Compare from './components/ComparePage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    search: '',\n    searchListItems: [],\n    item1: [],\n    item2: [],\n    cal1: [],\n    vitE1: [],\n    fat1: [],\n    sugar1: [],\n    item1Card: false,\n    item2Card: false,\n    cal2: [],\n    vitE2: [],\n    fat2: [],\n    sugar2: [],\n    openSideBar: false,\n    compareBtnClicked: false\n  }\n  \n  onSearch = e => {\n    this.setState({\n      search: e.target.value\n    })\n  }\n\n  onSearchSubmit = e => {\n    e.preventDefault();\n\n    //handle if user doesn't enter item-->throw error\n    if (!this.state.search) {\n      //eventually render this message\n      console.log('please enter item');\n    } else {\n    //make fetch call to search for item 1 and 2\n    fetch(`https://api.nal.usda.gov/ndb/search/?format=json&q=${this.state.search}&sort=n&max=10&offset=0&api_key=deSFRe23fryJ5XJpEjRJwqWhVGkfFWzXWvpymagG`)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          searchListItems: data.list.item\n        })\n      })\n      .catch(error => console.log(error))\n    }\n  }\n\n  onPagination = () => {\n    //grab next 10-15 list items...or fetch all then store all data and just render 10-15 at a time...\n    //function that knows what array index(dynamic) to start at\n    // 10-19, 20-29, etc.\n    //each time button is pressed add 10 to a counter.\n  }\n\n  checkValues = (nutrient) => {\n    if(nutrient === \"--\"){\n      return 0;\n    } else {\n      return nutrient;\n    }\n  }\n\n  //user chooses items for search results\n  onChooseItem = (e) => {\n    const { item1Card, searchListItems } = this.state;\n    const item = searchListItems.filter(item => e.target.getAttribute('name') === item.name);\n    const itemId = item[0].ndbno;\n\n    //if this.state for item1 is filled, then setState for item2, or else setState to item1\n    if (item1Card) {\n      fetch(`https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=KqBwC25CfgRxoNXgvoA3ej3Qxv205mji8YsVpvgo&nutrients=203&nutrients=204&nutrients=205&nutrients=208&nutrients=269&nutrients=323&ndbno=${itemId}`)\n      .then(resp=>resp.json())\n      .then(resp=>{\n        this.setState({\n          item2: resp.report.foods[0],\n          cal2: resp.report.foods[0].nutrients[0].value,\n          vitE2: resp.report.foods[0].nutrients[2].value,\n          fat2: resp.report.foods[0].nutrients[4].value,\n          sugar2: resp.report.foods[0].nutrients[3].value,\n          item2Card: true\n        })\n      })\n    } else {\n      fetch(`https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=KqBwC25CfgRxoNXgvoA3ej3Qxv205mji8YsVpvgo&nutrients=203&nutrients=204&nutrients=205&nutrients=208&nutrients=269&nutrients=323&ndbno=${itemId}`)\n      .then(resp=>resp.json())\n      .then(resp=>{\n        console.log(resp);\n        this.setState({\n          item1: resp.report.foods[0],\n          cal1: resp.report.foods[0].nutrients[0].value,\n          vitE1: resp.report.foods[0].nutrients[2].value,\n          fat1: resp.report.foods[0].nutrients[4].value,\n          sugar1: resp.report.foods[0].nutrients[3].value,\n          item1Card: true,\n          openSideBar: true\n        })\n      })\n    }\n  }\n\n  render() {\n\n    const { searchListItems, item1, item2 } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Route exact path='/' render={()=>(\n          <div> \n            <header className=\"App-header\">\n              <h1>Enter Food</h1>\n            </header>\n            <Form inline className='searchfield'>\n              <FormGroup>\n                <Label for='search'>\n                  <Input id='search' className='search-text' onChange={e=>this.onSearch(e)} type='search' placeholder='enter food item'/>\n                  <Input className='search-btn' type='submit' value='Search' onClick={e=>this.onSearchSubmit(e)}/>\n                </Label>\n              </FormGroup>\n            </Form>\n            <ListGroup\n              className='list-group'\n              onClick={e=>this.onChooseItem(e)}>\n            {\n              searchListItems.length > 0\n              ? searchListItems.map(item => (\n                <ListGroupItem\n                  className='list-group-item'\n                  key={item.ndbno}\n                  name={item.name}\n                >{item.name}\n                </ListGroupItem>\n              ))\n              : ''\n            }\n            </ListGroup>\n            { this.state.openSideBar\n              ? <Sidebar\n                  item1={item1}\n                  item2={item2}\n                />\n              : ''\n            }\n          </div>\n        )} />\n        <Route path='/comparepage' render={()=>(\n          <Compare\n          {...this.state}\n          />\n        )} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}