{"ast":null,"code":"import _classCallCheck from \"/Users/stefchin/Documents/usda/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefchin/Documents/usda/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefchin/Documents/usda/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefchin/Documents/usda/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefchin/Documents/usda/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stefchin/Documents/usda/client/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, FormGroup, Button, Label, Input } from 'reactstrap';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: '',\n      searchListItems: [],\n      item1: [],\n      item2: [],\n      // data: [],\n      cal1: [],\n      vitE1: [],\n      fat1: [],\n      sugar1: [],\n      item1Card: false,\n      item2Card: false,\n      cal2: [],\n      vitE2: [],\n      fat2: [],\n      sugar2: []\n    };\n\n    _this.onSearch = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    _this.onSearchSubmit = function (e) {\n      e.preventDefault(); //handle if user doesn't enter item-->throw error\n\n      if (!_this.state.search) {\n        //eventually render this message\n        console.log('please enter item');\n      } else {\n        //make fetch call to search for item 1 and 2\n        //get just for first 10-15 or all??\n        //validate the this.state.search isn't empty\n        //how to handle if user's item doesn't exists (non-food itemex. 'rain')\n        // let searchItem;\n        //  if(this.state.search === regex-alpha numeric??)\n        fetch(\"https://api.nal.usda.gov/ndb/search/?format=json&q=\".concat(_this.state.search, \"&sort=n&max=5&offset=0&api_key=deSFRe23fryJ5XJpEjRJwqWhVGkfFWzXWvpymagG\")).then(function (resp) {\n          return resp.json();\n        }).then(function (data) {\n          console.log(data);\n\n          _this.setState({\n            searchListItems: data.list.item\n          }); // want to create li's to list returned item\n          //store data in var listItems then use conditional render\n\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      }\n    };\n\n    _this.onPagination = function () {//grab next 10-15 list items...or fetch all then store all data and just render 10-15 at a time...\n      //function that know what array index(dynamic) to start at\n      // 16-30? 31-45. 46-50\n      //each time button is pressed add 15 to a counter. sure.\n    };\n\n    _this.checkValues = function (nutrient) {\n      if (nutrient === \"--\") {\n        return 0;\n      } else {\n        return nutrient;\n      }\n    };\n\n    _this.onChooseItem = function (e) {\n      //fetch that items data\n      var _this$state = _this.state,\n          item1Card = _this$state.item1Card,\n          searchListItems = _this$state.searchListItems;\n      var item = searchListItems.filter(function (item) {\n        return e.target.getAttribute('name') === item.name;\n      });\n      var itemId = item[0].ndbno;\n\n      if (item1Card) {\n        fetch(\"https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=KqBwC25CfgRxoNXgvoA3ej3Qxv205mji8YsVpvgo&nutrients=203&nutrients=204&nutrients=205&nutrients=208&nutrients=269&nutrients=323&ndbno=\".concat(itemId)).then(function (resp) {\n          return resp.json();\n        }).then(function (resp) {\n          console.log(resp); // if(resp.report.foods[0].nutrients.length > 0){\n\n          _this.setState({\n            item2: resp.report.foods[0],\n            cal2: resp.report.foods[0].nutrients[0].value,\n            vitE2: resp.report.foods[0].nutrients[2].value,\n            fat2: resp.report.foods[0].nutrients[4].value,\n            sugar1: resp.report.foods[0].nutrients[3].value,\n            item2Card: true\n          });\n        });\n      } else {\n        // fetch(`https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=deSFRe23fryJ5XJpEjRJwqWhVGkfFWzXWvpymagG&nutrients=205&nutrients=204&nutrients=208&nutrients=269&nutrients=401&nutrients=323&nutrients=328&ndbno=${itemId}`)\n        fetch(\"https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=KqBwC25CfgRxoNXgvoA3ej3Qxv205mji8YsVpvgo&nutrients=203&nutrients=204&nutrients=205&nutrients=208&nutrients=269&nutrients=323&ndbno=\".concat(itemId)).then(function (resp) {\n          return resp.json();\n        }).then(function (resp) {\n          console.log(resp);\n\n          _this.setState({\n            item1: resp.report.foods[0],\n            cal1: resp.report.foods[0].nutrients[0].value,\n            vitE1: resp.report.foods[0].nutrients[2].value,\n            fat1: resp.report.foods[0].nutrients[4].value,\n            sugar2: resp.report.foods[0].nutrients[3].value,\n            item1Card: true\n          });\n        });\n      } //store data for item 2\n\n    };\n\n    _this.onCompare = function () {//get all data for search item 1 and 2?? No, do in search\n      //compare item 1 and 2\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.state.nutrientdata.sr)\n      console.log(\"item1:\" + this.state.item1);\n      var _this$state2 = this.state,\n          searchListItems = _this$state2.searchListItems,\n          data = _this$state2.data,\n          item1 = _this$state2.item1,\n          cal1 = _this$state2.cal1,\n          cal2 = _this$state2.cal2,\n          vitE1 = _this$state2.vitE1,\n          vitE2 = _this$state2.vitE2,\n          item2 = _this$state2.item2,\n          fat1 = _this$state2.fat1,\n          fat2 = _this$state2.fat2,\n          sugar1 = _this$state2.sugar1,\n          sugar2 = _this$state2.sugar2; // let calorieCalc;\n      // if (item1.length > 0){\n      //   calorieCalc = Math.round(this.state.item1.nutrients[4].gm * 4);\n      //   return calorieCalc\n      // }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Enter Food\")), React.createElement(Form, {\n        inline: true,\n        className: \"searchfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"search\",\n        className: \"search-text\",\n        onChange: function onChange(e) {\n          return _this2.onSearch(e);\n        },\n        type: \"search\",\n        placeholder: \"enter food item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Input, {\n        className: \"search-btn\",\n        type: \"submit\",\n        value: \"Search\",\n        onClick: function onClick(e) {\n          return _this2.onSearchSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })))), React.createElement(\"ul\", {\n        onClick: function onClick(e) {\n          return _this2.onChooseItem(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, searchListItems.length > 0 ? searchListItems.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.ndbno,\n          name: item.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, item.name);\n      }) : ''), React.createElement(\"main\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.item1Card && React.createElement(\"div\", {\n        className: \"display1\",\n        style: {\n          width: '350px',\n          height: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, item1.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"calories: \", cal1), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"fat: \", fat1, \"grams\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"vitamin E: \", vitE1), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"sugar: \", sugar1 || 0, \"g\")), this.state.item2Card && React.createElement(\"div\", {\n        className: \"display2\",\n        style: {\n          width: '350px',\n          height: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, item2.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"calories: \", cal2), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"fat: \", fat2, \"grams\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"vitamin E: \", vitE2), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"sugar: \", sugar2, \"g\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //component for food list(item1 and item2)\n//returning undefined-->couldn't parse it out in render()...had to parse out and setState\n\n/* <p>{nutrientdata.report.foods.nutrients[0].nutrient}</p> */\n// cal2: this.checkValues(resp.report.foods[0].nutrients[2].gm)*4\n// + this.checkValues(resp.report.foods[0].nutrients[4].gm)*9\n// + this.checkValues(resp.report.foods[0].nutrients[5].gm)*4,","map":{"version":3,"sources":["/Users/stefchin/Documents/usda/client/src/App.js"],"names":["React","Component","Form","FormGroup","Button","Label","Input","App","state","search","searchListItems","item1","item2","cal1","vitE1","fat1","sugar1","item1Card","item2Card","cal2","vitE2","fat2","sugar2","onSearch","e","setState","target","value","onSearchSubmit","preventDefault","console","log","fetch","then","resp","json","data","list","item","catch","error","onPagination","checkValues","nutrient","onChooseItem","filter","getAttribute","name","itemId","ndbno","report","foods","nutrients","onCompare","length","map","display","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,eAAe,EAAE,EAFX;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKN;AACAC,MAAAA,IAAI,EAAE,EANA;AAONC,MAAAA,KAAK,EAAE,EAPD;AAQNC,MAAAA,IAAI,EAAE,EARA;AASNC,MAAAA,MAAM,EAAE,EATF;AAUNC,MAAAA,SAAS,EAAE,KAVL;AAWNC,MAAAA,SAAS,EAAE,KAXL;AAYNC,MAAAA,IAAI,EAAE,EAZA;AAaNC,MAAAA,KAAK,EAAE,EAbD;AAcNC,MAAAA,IAAI,EAAE,EAdA;AAeNC,MAAAA,MAAM,EAAE;AAfF,K;;UAkBRC,Q,GAAW,UAAAC,CAAC,EAAI;AACd,YAAKC,QAAL,CAAc;AACZhB,QAAAA,MAAM,EAAEe,CAAC,CAACE,MAAF,CAASC;AADL,OAAd;AAGD,K;;UAEDC,c,GAAiB,UAAAJ,CAAC,EAAI;AACpBA,MAAAA,CAAC,CAACK,cAAF,GADoB,CAGpB;;AACA,UAAI,CAAC,MAAKrB,KAAL,CAAWC,MAAhB,EAAwB;AACtB;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAHD,MAGO;AAEP;AACA;AACA;AACA;AACE;AACA;AACFC,QAAAA,KAAK,8DAAuD,MAAKxB,KAAL,CAAWC,MAAlE,6EAAL,CACGwB,IADH,CACQ,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,SADZ,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZN,UAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;;AACA,gBAAKX,QAAL,CAAc;AACZf,YAAAA,eAAe,EAAE0B,IAAI,CAACC,IAAL,CAAUC;AADf,WAAd,EAFY,CAKZ;AACA;;AACD,SATH,EAUGC,KAVH,CAUS,UAAAC,KAAK;AAAA,iBAAIV,OAAO,CAACC,GAAR,CAAYS,KAAZ,CAAJ;AAAA,SAVd;AAWC;AACF,K;;UAEDC,Y,GAAe,YAAM,CACnB;AACA;AACA;AACA;AACD,K;;UAEDC,W,GAAc,UAACC,QAAD,EAAc;AAC1B,UAAGA,QAAQ,KAAK,IAAhB,EAAqB;AACnB,eAAO,CAAP;AACD,OAFD,MAEO;AACL,eAAOA,QAAP;AACD;AACF,K;;UAEDC,Y,GAAe,UAACpB,CAAD,EAAO;AACpB;AADoB,wBAEmB,MAAKhB,KAFxB;AAAA,UAEZS,SAFY,eAEZA,SAFY;AAAA,UAEDP,eAFC,eAEDA,eAFC;AAGpB,UAAM4B,IAAI,GAAG5B,eAAe,CAACmC,MAAhB,CAAuB,UAAAP,IAAI;AAAA,eAAId,CAAC,CAACE,MAAF,CAASoB,YAAT,CAAsB,MAAtB,MAAkCR,IAAI,CAACS,IAA3C;AAAA,OAA3B,CAAb;AACA,UAAMC,MAAM,GAAGV,IAAI,CAAC,CAAD,CAAJ,CAAQW,KAAvB;;AAEA,UAAIhC,SAAJ,EAAe;AACbe,QAAAA,KAAK,0MAAmMgB,MAAnM,EAAL,CACCf,IADD,CACM,UAAAC,IAAI;AAAA,iBAAEA,IAAI,CAACC,IAAL,EAAF;AAAA,SADV,EAECF,IAFD,CAEM,UAAAC,IAAI,EAAE;AACVJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EADU,CAEV;;AACA,gBAAKT,QAAL,CAAc;AACZb,YAAAA,KAAK,EAAEsB,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,CADK;AAEZhC,YAAAA,IAAI,EAAEe,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAF5B;AAGZP,YAAAA,KAAK,EAAEc,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAH7B;AAIZN,YAAAA,IAAI,EAAEa,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAJ5B;AAKZX,YAAAA,MAAM,EAAEkB,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAL9B;AAMZT,YAAAA,SAAS,EAAE;AANC,WAAd;AAQD,SAbD;AAcA,OAfF,MAeQ;AACR;AACAc,QAAAA,KAAK,0MAAmMgB,MAAnM,EAAL,CACCf,IADD,CACM,UAAAC,IAAI;AAAA,iBAAEA,IAAI,CAACC,IAAL,EAAF;AAAA,SADV,EAECF,IAFD,CAEM,UAAAC,IAAI,EAAE;AACVJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AACA,gBAAKT,QAAL,CAAc;AACZd,YAAAA,KAAK,EAAEuB,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,CADK;AAEZtC,YAAAA,IAAI,EAAEqB,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAF5B;AAGZb,YAAAA,KAAK,EAAEoB,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAH7B;AAIZZ,YAAAA,IAAI,EAAEmB,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAJ5B;AAKZL,YAAAA,MAAM,EAAEY,IAAI,CAACgB,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,SAArB,CAA+B,CAA/B,EAAkCzB,KAL9B;AAMZV,YAAAA,SAAS,EAAE;AANC,WAAd;AAQD,SAZD;AAaD,OApCqB,CAqCpB;;AACD,K;;UAODoC,S,GAAY,YAAM,CAChB;AACA;AACD,K;;;;;;;6BAEQ;AAAA;;AACP;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKvB,KAAL,CAAWG,KAAlC;AAFO,yBAG+F,KAAKH,KAHpG;AAAA,UAGCE,eAHD,gBAGCA,eAHD;AAAA,UAGkB0B,IAHlB,gBAGkBA,IAHlB;AAAA,UAGwBzB,KAHxB,gBAGwBA,KAHxB;AAAA,UAG+BE,IAH/B,gBAG+BA,IAH/B;AAAA,UAGqCM,IAHrC,gBAGqCA,IAHrC;AAAA,UAG2CL,KAH3C,gBAG2CA,KAH3C;AAAA,UAGkDM,KAHlD,gBAGkDA,KAHlD;AAAA,UAGyDR,KAHzD,gBAGyDA,KAHzD;AAAA,UAGgEG,IAHhE,gBAGgEA,IAHhE;AAAA,UAGsEM,IAHtE,gBAGsEA,IAHtE;AAAA,UAG4EL,MAH5E,gBAG4EA,MAH5E;AAAA,UAGoFM,MAHpF,gBAGoFA,MAHpF,EAKP;AACA;AACA;AACA;AACA;;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,iBAAE,MAAI,CAACD,QAAL,CAAcC,CAAd,CAAF;AAAA,SAAtD;AAA0E,QAAA,IAAI,EAAC,QAA/E;AAAwF,QAAA,WAAW,EAAC,iBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAA4C,QAAA,KAAK,EAAC,QAAlD;AAA2D,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAE,MAAI,CAACI,cAAL,CAAoBJ,CAApB,CAAF;AAAA,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CAJF,EAYE;AAAI,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAE,MAAI,CAACoB,YAAL,CAAkBpB,CAAlB,CAAF;AAAA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEd,eAAe,CAAC4C,MAAhB,GAAyB,CAAzB,GACE5C,eAAe,CAAC6C,GAAhB,CAAoB,UAAAjB,IAAI;AAAA,eACxB;AACE,UAAA,GAAG,EAAEA,IAAI,CAACW,KADZ;AAEE,UAAA,IAAI,EAAEX,IAAI,CAACS,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGET,IAAI,CAACS,IAHP,CADwB;AAAA,OAAxB,CADF,GAQE,EAVJ,CAZF,EAyBE;AAAM,QAAA,KAAK,EAAE;AAACS,UAAAA,OAAO,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKhD,KAAL,CAAWS,SAAX,IACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEwC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK/C,KAAK,CAACoC,IAAX,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAclC,IAAd,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAASE,IAAT,UAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAeD,KAAf,CAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWE,MAAM,IAAI,CAArB,MALH,CAFH,EAUE,KAAKR,KAAL,CAAWU,SAAX,IACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEuC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9C,KAAK,CAACmC,IAAX,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc5B,IAAd,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAASE,IAAT,UAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAeD,KAAf,CAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWE,MAAX,MALH,CAXH,CAzBF,CADF;AAgDD;;;;EAnLerB,S;;AAsLlB,eAAeM,GAAf,C,CAGA;AAEA;;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, FormGroup, Button, Label, Input } from 'reactstrap';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    search: '',\n    searchListItems: [],\n    item1: [],\n    item2: [],\n    // data: [],\n    cal1: [],\n    vitE1: [],\n    fat1: [],\n    sugar1: [],\n    item1Card: false,\n    item2Card: false,\n    cal2: [],\n    vitE2: [],\n    fat2: [],\n    sugar2: []\n  }\n  \n  onSearch = e => {\n    this.setState({\n      search: e.target.value\n    })\n  }\n\n  onSearchSubmit = e => {\n    e.preventDefault();\n\n    //handle if user doesn't enter item-->throw error\n    if (!this.state.search) {\n      //eventually render this message\n      console.log('please enter item');\n    } else {\n\n    //make fetch call to search for item 1 and 2\n    //get just for first 10-15 or all??\n    //validate the this.state.search isn't empty\n    //how to handle if user's item doesn't exists (non-food itemex. 'rain')\n      // let searchItem;\n      //  if(this.state.search === regex-alpha numeric??)\n    fetch(`https://api.nal.usda.gov/ndb/search/?format=json&q=${this.state.search}&sort=n&max=5&offset=0&api_key=deSFRe23fryJ5XJpEjRJwqWhVGkfFWzXWvpymagG`)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          searchListItems: data.list.item\n        })\n        // want to create li's to list returned item\n        //store data in var listItems then use conditional render\n      })\n      .catch(error => console.log(error))\n    }\n  }\n\n  onPagination = () => {\n    //grab next 10-15 list items...or fetch all then store all data and just render 10-15 at a time...\n    //function that know what array index(dynamic) to start at\n    // 16-30? 31-45. 46-50\n    //each time button is pressed add 15 to a counter. sure.\n  }\n\n  checkValues = (nutrient) => {\n    if(nutrient === \"--\"){\n      return 0;\n    } else {\n      return nutrient;\n    }\n  }\n\n  onChooseItem = (e) => {\n    //fetch that items data\n    const { item1Card, searchListItems } = this.state;\n    const item = searchListItems.filter(item => e.target.getAttribute('name') === item.name);\n    const itemId = item[0].ndbno;\n\n    if (item1Card) {\n      fetch(`https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=KqBwC25CfgRxoNXgvoA3ej3Qxv205mji8YsVpvgo&nutrients=203&nutrients=204&nutrients=205&nutrients=208&nutrients=269&nutrients=323&ndbno=${itemId}`)\n      .then(resp=>resp.json())\n      .then(resp=>{\n        console.log(resp);\n        // if(resp.report.foods[0].nutrients.length > 0){\n        this.setState({\n          item2: resp.report.foods[0],\n          cal2: resp.report.foods[0].nutrients[0].value,\n          vitE2: resp.report.foods[0].nutrients[2].value,\n          fat2: resp.report.foods[0].nutrients[4].value,\n          sugar1: resp.report.foods[0].nutrients[3].value,\n          item2Card: true\n        })\n      })\n     } else {\n    // fetch(`https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=deSFRe23fryJ5XJpEjRJwqWhVGkfFWzXWvpymagG&nutrients=205&nutrients=204&nutrients=208&nutrients=269&nutrients=401&nutrients=323&nutrients=328&ndbno=${itemId}`)\n    fetch(`https://api.nal.usda.gov/ndb/nutrients/?format=json&api_key=KqBwC25CfgRxoNXgvoA3ej3Qxv205mji8YsVpvgo&nutrients=203&nutrients=204&nutrients=205&nutrients=208&nutrients=269&nutrients=323&ndbno=${itemId}`)\n    .then(resp=>resp.json())\n    .then(resp=>{\n      console.log(resp);\n      this.setState({\n        item1: resp.report.foods[0],\n        cal1: resp.report.foods[0].nutrients[0].value,\n        vitE1: resp.report.foods[0].nutrients[2].value,\n        fat1: resp.report.foods[0].nutrients[4].value,\n        sugar2: resp.report.foods[0].nutrients[3].value,\n        item1Card: true\n      })\n    })\n  }\n    //store data for item 2\n  }\n\n\n  // fetchChosenItem = (itemId) = {\n\n  // }\n\n  onCompare = () => {\n    //get all data for search item 1 and 2?? No, do in search\n    //compare item 1 and 2\n  }\n\n  render() {\n    // console.log(this.state.nutrientdata.sr)\n    console.log(`item1:` + this.state.item1)\n    const { searchListItems, data, item1, cal1, cal2, vitE1, vitE2, item2, fat1, fat2, sugar1, sugar2 } = this.state;\n\n    // let calorieCalc;\n    // if (item1.length > 0){\n    //   calorieCalc = Math.round(this.state.item1.nutrients[4].gm * 4);\n    //   return calorieCalc\n    // }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Enter Food</h1>\n        </header>\n        <Form inline className='searchfield'>\n          <FormGroup>\n            <Label for='search'>\n              <Input id='search' className='search-text' onChange={e=>this.onSearch(e)} type='search' placeholder='enter food item'/>\n              <Input className='search-btn' type='submit' value='Search' onClick={e=>this.onSearchSubmit(e)}/>\n            </Label>\n          </FormGroup>\n        </Form>\n        <ul onClick={e=>this.onChooseItem(e)}>\n        {\n          searchListItems.length > 0\n          ? searchListItems.map(item => (\n            <li\n              key={item.ndbno}\n              name={item.name}\n            >{item.name}\n            </li>\n          ))\n          : ''\n        }\n        </ul>\n        <main style={{display: 'flex'}}>\n        { this.state.item1Card &&\n          (<div className=\"display1\" style={{ width: '350px', height: '300px'}}>\n              <h2>{item1.name}</h2>\n              <p>calories: {cal1}</p>\n              <p>fat: {fat1}grams</p>\n              <p>vitamin E: {vitE1}</p>\n              <p>sugar: {sugar1 || 0}g</p>\n            </div>)\n        }\n        { this.state.item2Card &&\n          (<div className=\"display2\" style={{ width: '350px', height: '300px'}}>\n              <h2>{item2.name}</h2>\n              <p>calories: {cal2}</p>\n              <p>fat: {fat2}grams</p>\n              <p>vitamin E: {vitE2}</p>\n              <p>sugar: {sugar2}g</p>\n            </div>)\n        }\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n//component for food list(item1 and item2)\n\n//returning undefined-->couldn't parse it out in render()...had to parse out and setState\n/* <p>{nutrientdata.report.foods.nutrients[0].nutrient}</p> */\n\n// cal2: this.checkValues(resp.report.foods[0].nutrients[2].gm)*4\n// + this.checkValues(resp.report.foods[0].nutrients[4].gm)*9\n// + this.checkValues(resp.report.foods[0].nutrients[5].gm)*4,"]},"metadata":{},"sourceType":"module"}